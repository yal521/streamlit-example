# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1anOeG5Hl7jwoEVXAKqwz9x00-pikB09P
"""

!pip install streamlit

import tensorflow as tf
import pandas as pd
import streamlit as st
data = pd.read_csv("https://github.com/yal521/streamlit-example/blob/master/data.csv")
input_sequence = data.iloc[:, 0:-1].values
output_sequence = data.iloc[:, -1].values
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(input_sequence, output_sequence, test_size=0.2)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(input_sequence, output_sequence, test_size=0.2)

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0, 1))
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.LSTM(units=50, return_sequences=True, input_shape=(X_train.shape[1], 1)))
model.add(tf.keras.layers.Dropout(0.2))
model.add(tf.keras.layers.LSTM(units=50, return_sequences=True))
model.add(tf.keras.layers.Dropout(0.2))
model.add(tf.keras.layers.LSTM(units=50, return_sequences=True))
model.add(tf.keras.layers.Dropout(0.2))
model.add(tf.keras.layers.LSTM(units=50))
model.add(tf.keras.layers.Dropout(0.2))
model.add(tf.keras.layers.Dense(units=1))

model.compile(optimizer='adam', loss='mean_squared_error')

history = model.fit(X_train, y_train, epochs=100, batch_size=32, validation_data=(X_test, y_test))

new_data = [[0.2, 0.3, 0.4, 0.5,0.6], [0.3, 0.4, 0.5, 0.6,0.7]]
new_data = scaler.transform(new_data)
prediction = model.predict(new_data)

st.title("LSTM Prediction Model")
input_data = st.text_input("Enter input data:")
if input_data:
    input_data = [[float(x) for x in input_data.split(",")]]
    input_data = scaler.transform(input_data)
    prediction = model.predict(input_data)
    st.write("The predicted output is", prediction[0][0])